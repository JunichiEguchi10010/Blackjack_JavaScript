/***********************************************
  グローバル変数
************************************************/

// カードの山（配列）
// 自分のカード（配列）
// 相手のカード（配列）
// 勝敗決定フラグ（論理型）

/***********************************************
  イベントハンドラの割り当て
************************************************/

// ページの読み込みが完了したとき実行する関数を登録
window.addEventListener("load", 初期表示);

// 「カードを引く」ボタンを押したとき実行する関数を登録
document.querySelector("#pick").addEventListener("click", カードを引く);

// 「勝負する！」ボタンを押したとき実行する関数を登録
document.querySelector("#judge").addEventListener("click", 勝負する);

// 「もう1回遊ぶ」ボタンを押したとき実行する関数を登録
document.querySelector("#reset").addEventListener("click", もう1回遊ぶ);

/***********************************************
  イベントハンドラ
************************************************/

// ページの読み込みが完了したとき実行する関数
function 初期表示() {
  // シャッフル
  // 自分がカードを引く
  // 相手がカードを引く
  // 画面を更新する
}

// 「カードを引く」ボタンを押したとき実行する関数
function カードを引く() {
  if (勝敗が未決定) {
    // 自分がカードを引く
    // 相手がカードを引く
    // 画面を更新する
  }
}

// 「勝負する！」ボタンを押したとき実行する関数
function 勝負する() {
  if (勝敗が未決定) {
    // 勝敗を判定する
    // 勝敗を画面に表示する
    // 勝敗決定フラグを「決定」に変更
  }
}

// 「もう1回遊ぶ」ボタンを押したとき実行する関数
function もう1回遊ぶ() {
  // 画面を初期表示に戻す
  // reloadメソッドでページを再読み込みする
}

/***********************************************
  ゲーム関数
************************************************/

/***********************************************
  デバッグ関数
************************************************/
